name: Publish to PyPI
on:
  workflow_dispatch:
  release:
      types: [published]
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install
      - name: Build package
        run: poetry build
      - name: Upload built package as artifact
        uses: actions/upload-artifact@v3
        with:
          name: built-package
          path: dist/*
      - name: Configure Poetry
        run: poetry config pypi-token.pypi "${{ secrets.PYPI_API_KEY }}"
      - name: Publish package
        run: poetry publish